version: "3.4"
services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    hostname: rabbitmq
    restart: always
    networks:
      - back-end
    volumes:
      - ${PWD}/rabbitmq/etc/definitions.json:/etc/rabbitmq/definitions.json:ro
      - ${PWD}/rabbitmq/etc/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
      - ${PWD}/rabbitmq/data:/var/lib/rabbitmq:rw
      - ${PWD}/rabbitmq/logs:/var/log/rabbitmq/log:rw
    ports:
      - 5672:5672
      - 15672:15672
  interpreter:
    build: ./interpreter
    container_name: interpreter
    hostname: interpreter
    restart: always
    privileged: true
#    devices:
#      - /dev/bus/usb
    depends_on: 
      - rabbitmq
    extra_hosts:
      security-cam: 192.168.50.154
    networks:
      - back-end
    volumes:
      - ${PWD}/output:/interpreter/output:rw
    environment:
      - LD_PRELOAD=/usr/lib/aarch64-linux-gnu/libgomp.so.1
      - RABBITMQ_USER=interpreter
      - RABBITMQ_PASSWORD=interpreter
#  proxy:
#    build: ./proxy
#    image: jjhickman/iot-home:proxy
#    container_name: proxy
#    hostname: proxy
#    restart: unless-stopped
#    depends_on: 
#      - api
#    networks:
#      - host
#      - back-end
#    volumes:
#      - ./proxy/nginx:/etc/nginx:ro
#    environment:
#      - API_ENDPOINT=api:8080
#  notifier:
#    build: ./notifier
#    image: jjhickman/iot-home-notifier
#    container_name: notifier
#    hostname: notifier
#    restart: unless-stopped
#    depends_on: 
#      - rabbitmq
#    networks:
#      - host
#      - back-end
#    volumes:
#      - ./output:/notifier/output
#    environment:
#      - SNS_TOPIC_ARN=jjhickman-iot-home
#      - S3_BUCKET=jjhickman-iot-home
#      - HUB_REST_ENDPOINT=api:8080
#      - AWS_DEFAULT_REGION=us-east-1
#  api:
#    build: ./api
#    image: jjhickman/iot-home-api
#    container_name: api
#    hostname: api
#    restart: unless-stopped
#    networks:
#      - back-end
#    ports:
#      - 8080:8080
#    environment:
#      - RABBITMQ_HOST: "rabbitmq"
#      - RABBITMQ_USER: "guest"
#      - RABBITMQ_PASSWORD: "guest"
#      - INTERPETER_QUEUE: "input"
#      - NOTIFIER_QUEUE: "output"
#      - LOG_LEVEL: "debug"
networks:
  back-end:
